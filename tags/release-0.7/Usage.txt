    nMars - Corewars MARS for .NET 
---------------------------------------
- you will need .NET 2.0/Mono runtime installed
- both packages are expected to be extracted to same directory

***************************************
* Package nMarsBinary
***************************************
- this package is should run on any .NET/Mono system

  nMars.Parser.exe
---------------------
- This is implementation of RedCode parser
- it can parse 99% of warriors, still in developement, still some bugs 
- produces plain "Load Format" which can be loaded by all MARS engines
- it is console application, UI is very similar to pMARS
    - for help type nMars.Parser.exe -h 
- it is reusable .NET 2.0 component
    - look for class nMars.nMarsParser which implements interface IParser
- it is nMARS module, implements IParserModule


  nMars.Engine.exe
---------------------
- This is implementation of CoreWars engine
- it is 100% compatible with pMARS, there are unit tests to prove that
- it is console application, UI is very similar to pMARS
    - for help type nMars.Engine.exe -h 
- it is reusable .NET 2.0 component
    - look for class nMars.Engine.EngineSteps which implements interface IEngine
    - it is designed to be easy to extend and reuse not to be fast
- it is nMARS module, implements IEngineModule
- it uses nMars.Parser component to parse warriors


  nMars.RedCode.dll
---------------------
- This is common library for nMars
- it is reusable .NET 2.0 component
    - interfaces IParser, IEngine, 
    - classes Warrior, Instruction, Mode, Modifier
    - other reusable classes
    - support for modularity, see ModuleRegister, IModule
  



***************************************
* Package npMarsBinary.win32
***************************************
- this package is compiled for windows

  pMars.exe
--------------  
- This is old good pMARS 9.2
- compiled by MSVC++ 2005 for Windows platform
- small enhancements, same behavior as original pMars
- pMars.exe is console version
- pMarsSDL.exe + SDL.dll is graphical version by M Joonas Pihlaja
- pMars.dll exporting methods for parser, engine and core watch

  
  pMars.DllWrapper
-----------------------------------
- This is pMARS.dll wrapped by .NET assembly
- it is reusable .NET 2.0 component (but WIN32 dll only)
    - look for class pMarsDllParser which implements interface IParser
    - look for class pMarsDllEngine which implements interface IEngine
    - it is designed to be easy to extend and reuse not to be fast
- it is nMARS module, implements IEngineModule
- it is nMARS module, implements IParserModule

  
  nMars.Test.exe
---------------------
- This is Unit test library which compares parsers and engines
- it is console application, UI is very similar to pMARS which is testing engines
    - for help type nMars.Engine.exe -h 
    - you can use it to check that your warrior is properly execured by engines
- it is .NET 2.0 component
- it uses pMars.DllWrapper component as first tested parser
- it uses nMars.Parser component as second tested parser
- it uses pMars.DllWrapper component as first tested engine
- it uses nMars.Engine component as second tested engine
- you will need NUnit installed
  
  